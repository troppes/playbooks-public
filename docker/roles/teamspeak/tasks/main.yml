---
- name: Create Teamspeak User for Rights Management
  ansible.builtin.user:
    name: teamspeak
    uid: 9987
    create_home: false

- name: Create Folder for Teamspeak
  ansible.builtin.file:
    path: /srv/teamspeak
    owner: teamspeak
    group: flo
    state: directory
    mode: '0775'

- name: Check if DB exists
  command: docker exec mariadb bash -l -c 'mysql -p{{ mariadb_root_password | quote }} -e "SHOW DATABASES;" | grep -c {{ ts_mariadb_database | string }}'
  register: result
  changed_when: result.stdout == 0
  retries: 6
  delay: 5
  failed_when: result.stderr_lines | length > 0  # If the DB is not up yet, try for 30 sec
  until: result is not failed

- name: Create Database
  command: >
    docker exec mariadb bash -l -c 'mysql -p{{ mariadb_root_password | quote }} -e "
     CREATE DATABASE {{ ts_mariadb_database | string }};"'
  when: result.stdout == "0"

- name: Create Database User
  command: >
   docker exec mariadb mysql -p{{ mariadb_root_password | quote }} -e "
     CREATE USER '{{ ts_mariadb_username | string }}'@'%' IDENTIFIED BY '{{ ts_mariadb_password | string }}';"
  when: result.stdout == "0"

- name: Give Priviliges
  command: >
   docker exec mariadb mysql -p{{ mariadb_root_password | quote }} -e "
     GRANT ALL PRIVILEGES ON {{ ts_mariadb_database | string }}.* TO '{{ ts_mariadb_username | string }}'@'%';"
  when: result.stdout == "0"

- name: Deploy Teamspeak
  community.docker.docker_container:
    image: teamspeak
    name: teamspeak
    state: started
    restart_policy: unless-stopped
    purge_networks: true
    network_mode: default
    networks:
      - name: "traefik"
      - name: "mariadb"
    volumes:
      - /srv/teamspeak:/var/ts3server/
    env:
      TS3SERVER_DB_PLUGIN: "ts3db_mariadb"
      TS3SERVER_DB_SQLCREATEPATH: "create_mariadb"
      TS3SERVER_DB_HOST: "{{ db_host | string }}"
      TS3SERVER_DB_USER: "{{ ts_mariadb_username | string }}"
      TS3SERVER_DB_PASSWORD: "{{ ts_mariadb_password | string }}"
      TS3SERVER_DB_NAME: "{{ ts_mariadb_database | string }}"
      TS3SERVER_DB_WAITUNTILREADY: "30"
      TS3SERVER_LICENSE: "accept"
    labels:
      traefik.enable: "true"
      # Teamspeak-TCP-Upgrade
      traefik.tcp.routers.ts-tcp.rule: "HostSNI(`*`)"
      traefik.tcp.routers.ts-tcp.entrypoints: "ts-tcp1"
      traefik.tcp.routers.ts-tcp2.rule: "HostSNI(`*`)"
      traefik.tcp.routers.ts-tcp2.entrypoints: "ts-tcp2"
      traefik.tcp.routers.ts-tcp2.service: "ts-lb"
      traefik.tcp.services.ts-lb.loadbalancer.server.port: "30033"
      # Teamspeak-UDP-Upgrade
      traefik.udp.routers.ts-udp.entrypoints: "ts-udp"
