---
- name: Create Folder for Directus (database)
  ansible.builtin.file:
    path: /srv/directus/database
    owner: flo
    group: flo
    state: directory
    mode: '0775'

- name: Create Folder for Directus (upload)
  ansible.builtin.file:
    path: /srv/directus/uploads
    owner: flo
    group: flo
    state: directory
    mode: '0775'

- name: Create Folder for Directus (extensions)
  ansible.builtin.file:
    path: /srv/directus/extensions
    owner: flo
    group: flo
    state: directory
    mode: '0775'

- name: Check if DB exists
  command: docker exec mariadb bash -l -c 'mysql -p{{ mariadb_root_password | quote }} -e "SHOW DATABASES;" | grep -c {{ directus_mariadb_database | string }}'
  register: result
  changed_when: result.stdout == "0"
  retries: 6
  delay: 5
  failed_when: result.stderr_lines | length > 0
  until: result is not failed  # If the DB is not up yet, try for 30 sec

- name: Create Database
  command: >
    docker exec mariadb bash -l -c 'mysql -p{{ mariadb_root_password | quote }} -e "
     CREATE DATABASE {{ directus_mariadb_database | string }};"'
  when: result.stdout == "0"

- name: Create Database User
  command: >
   docker exec mariadb mysql -p{{ mariadb_root_password | quote }} -e "
     CREATE USER '{{ directus_mariadb_username | string }}'@'%' IDENTIFIED BY '{{ directus_mariadb_password | string }}';"
  when: result.stdout == "0"

- name: Give Priviliges
  command: >
   docker exec mariadb mysql -p{{ mariadb_root_password | quote }} -e "
     GRANT ALL PRIVILEGES ON {{ directus_mariadb_database | string }}.* TO '{{ directus_mariadb_username | string }}'@'%';"
  when: result.stdout == "0"

- name: Deploy Website Backend
  community.docker.docker_container:
    image: directus/directus:9.23.1
    name: directus
    state: started
    restart_policy: unless-stopped
    purge_networks: true
    network_mode: default
    networks:
      - name: "traefik"
      - name: "mariadb"
    volumes:
      - /srv/directus/database:/directus/database
      - /srv/directus/uploads:/directus/uploads
      - /srv/directus/extensions:/directus/extensions

    env:
      DB_CLIENT: "mysql"
      DB_HOST: "{{ db_host | string }}"
      DB_PORT: "{{ db_port | string }}"
      DB_DATABASE: "{{ directus_mariadb_database | string }}"
      DB_USER: "{{ directus_mariadb_username | string }}"
      DB_PASSWORD: "{{ directus_mariadb_password | string }}"
      KEY: "{{ directus_auth_publickey | string }}"
      SECRET: "{{ directus_auth_secretkey | string }}"
      EMAIL_TRANSPORT: "smtp"
      EMAIL_FROM: "{{ mail_from | string }}"
      EMAIL_SMTP_HOST: "{{ mail_host | string }}"
      EMAIL_SMTP_PORT: "{{ mail_port | string }}"
      EMAIL_SMTP_USER: "{{ mail_username | string }}"
      EMAIL_SMTP_PASSWORD: "{{ mail_password | string }}"
      EMAIL_SMTP_SECURE: "1"
      CORS_ENABLED: "true"
    labels:
      traefik.enable: "true"
      # Directus
      traefik.http.routers.directus.rule: "Host(`cms.{{ base_url | string }}`)"
      traefik.http.routers.directus.tls: "true"
      traefik.http.routers.directus.tls.certresolver: "cert-reitz"
      traefik.http.routers.directus.entrypoints: "web-secure"
      # Directus HTTPS-Upgrade
      traefik.http.routers.directus-unsecure.rule: "Host(`cms.{{ base_url | string }}`)"
      traefik.http.routers.directus-unsecure.entrypoints: "web"
      traefik.http.routers.directus-unsecure.middlewares: "redirect-https@file"
