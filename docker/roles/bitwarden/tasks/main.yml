---
- name: Create Bitwarden folder
  ansible.builtin.file:
    path: /srv/bitwarden/
    owner: flo
    group: flo
    state: directory
    mode: '0775'

- name: Check if DB exists
  command: docker exec mariadb bash -l -c 'mysql -p{{ mariadb_root_password | quote }} -e "SHOW DATABASES;" | grep -c {{ bw_mariadb_database | string }}'
  register: result
  changed_when: result.stdout == 0
  retries: 6
  delay: 5
  failed_when: result.stderr_lines | length > 0  # If the DB is not up yet, try for 30 sec
  until: result is not failed

- name: Create Database
  command: >
    docker exec mariadb bash -l -c 'mysql -p{{ mariadb_root_password | quote }} -e "
     CREATE DATABASE {{ bw_mariadb_database | string }};"'
  when: result.stdout == "0"

- name: Create Database User
  command: >
   docker exec mariadb mysql -p{{ mariadb_root_password | quote }} -e "
     CREATE USER '{{ bw_mariadb_username | string }}'@'%' IDENTIFIED BY '{{ bw_mariadb_password | string }}';"
  when: result.stdout == "0"

- name: Give Priviliges
  command: >
   docker exec mariadb mysql -p{{ mariadb_root_password | quote }} -e "
     GRANT ALL PRIVILEGES ON {{ bw_mariadb_database | string }}.* TO '{{ bw_mariadb_username | string }}'@'%';"
  when: result.stdout == "0"

- name: Deploy Bitwarden
  community.docker.docker_container:
    image: bitwarden/self-host:beta
    name: bitwarden
    state: started
    restart_policy: unless-stopped
    purge_networks: true
    network_mode: default
    networks:
      - name: "traefik"
      - name: "mariadb"
    volumes:
      - /srv/bitwarden:/etc/bitwarden
    env:
      # Database
      BW_DOMAIN: vault.{{ base_url | string }}
      BW_DB_PROVIDER: mysql
      BW_DB_SERVER: "{{ db_host | string }}"
      BW_DB_DATABASE: "{{ bw_mariadb_database | string }}"
      BW_DB_USERNAME: "{{ bw_mariadb_username | string }}"
      BW_DB_PASSWORD: "{{ bw_mariadb_password | string }}"
      BW_INSTALLATION_ID: "{{ bw_inst_id | string }}"
      BW_INSTALLATION_KEY: "{{ bw_inst_key | string }}"
      adminSettings__admins: "{{ bw_admins | string }}"
      globalSettings__mail__replyToEmail: "{{ mail_from | string }}"
      globalSettings__mail__smtp__host: "{{ mail_host | string }}"
      globalSettings__mail__smtp__port: "{{ mail_port | string }}"
      globalSettings__mail__smtp__ssl: "true"
      globalSettings__mail__smtp__username: "{{ mail_username | string }}"
      globalSettings__mail__smtp__password: "{{ mail_password | string }}"
    labels:
      traefik.enable: "true"
      # Bitwarden
      traefik.http.routers.bitwarden.rule: "Host(`vault.{{ base_url | string }}`)"
      traefik.http.routers.bitwarden.entrypoints: "web-secure"
      traefik.http.routers.bitwarden.tls: "true"
      traefik.http.routers.bitwarden.tls.certresolver: "cert-reitz"
      traefik.http.routers.bitwarden.service: "bitwarden-lb"
      # Bitwarden HTTPS-Upgrade
      traefik.http.routers.bitwarden-unsecure.rule: "Host(`vault.{{ base_url | string }}`)"
      traefik.http.routers.bitwarden-unsecure.entrypoints: "web"
      traefik.http.routers.bitwarden-unsecure.middlewares: "redirect-https@file"
      traefik.http.routers.bitwarden-unsecure.service: "bitwarden-lb"
      # load-Balancer to route to another port
      traefik.http.services.bitwarden-lb.loadbalancer.server.port: "8080"
